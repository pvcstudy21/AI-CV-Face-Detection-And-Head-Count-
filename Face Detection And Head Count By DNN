import cv2
import numpy as np

# Specify the paths to the downloaded model files
model_prototxt = r"C:\Users\Dell\Downloads\deploy.prototxt.txt"
model_weights = r"C:\Users\Dell\Downloads\res10_300x300_ssd_iter_140000.caffemodel"

# Load the input image
image_path = r"C:\Users\Dell\Desktop\75th birthday selected photo\IMG_2396 - Copy.JPG"
image = cv2.imread(image_path)

# Get screen resolution
screen_width, screen_height = 1920, 1080

# Resize the image to fit the screen
image = cv2.resize(image, (screen_width, screen_height))

# Convert the image to blob format
blob = cv2.dnn.blobFromImage(image, 1.0, (300, 300), (104, 177, 123))

# Load the pre-trained deep learning model for face detection
net = cv2.dnn.readNetFromCaffe(model_prototxt, model_weights)

# Set the input to the neural network
net.setInput(blob)

# Perform face detection
detections = net.forward()

# Draw rectangles around the detected faces and count them
face_count = 0
for i in range(detections.shape[2]):
    confidence = detections[0, 0, i, 2]
    if confidence > 0.15:  # Adjust confidence threshold as needed
        box = detections[0, 0, i, 3:7] * np.array([screen_width, screen_height, screen_width, screen_height])
        (startX, startY, endX, endY) = box.astype("int")
        cv2.rectangle(image, (startX, startY), (endX, endY), (0, 255, 0), 2)
        face_count += 1
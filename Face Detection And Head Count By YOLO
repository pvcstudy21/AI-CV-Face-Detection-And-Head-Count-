import cv2
import numpy as np

# Load YOLO model
net = cv2.dnn.readNet(r"C:\Users\Dell\Downloads\yolov3.weights", r"C:\Users\Dell\Downloads\yolov3.cfg")

# Load YOLO classes
with open(r"C:\Users\Dell\Downloads\yolov3.txt", "r") as f:
    classes = f.read().strip().split('\n')

layer_names = net.getUnconnectedOutLayersNames()

#image = cv2.imread(r"C:\Users\Dell\Desktop\75th birthday selected photo\IMG_2364.JPG")
image = cv2.imread(r"C:\Users\Dell\Downloads\Sample for YOLO.jpg")
height, width = image.shape[:2]

# Preprocess image for YOLO
blob = cv2.dnn.blobFromImage(image, scalefactor=1/255.0, size=(416, 416), swapRB=True, crop=False)
net.setInput(blob)

# face detection

detections = net.forward(layer_names)

confidence_threshold = 0.5
nms_threshold = 0.4
head_count = 0

for detection in detections:
    for obj in detection:
        scores = obj[5:]
        class_id = np.argmax(scores)
        confidence = scores[class_id]

        if confidence > confidence_threshold and class_id == 0:  # Class index for "person" is typically 0
            # Extract bounding box coordinates
            box = obj[0:4] * np.array([width, height, width, height])
            (x, y, w, h) = box.astype("int")

            # Draw bounding box
            cv2.rectangle(image, (x, y), (x+w, y+h), (0, 255, 0), 2)

            # Increment head count
            head_count += 1